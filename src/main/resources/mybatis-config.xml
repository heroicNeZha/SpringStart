<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--    <settings>-->
    <!--        <setting name="cacheEnabled" value="true"/>-->
    <!--        <setting name="defaultStatementTimeout" value="3000"/>-->
    <!--        <setting name="mapUnderscoreToCamelCase" value="true"/>-->
    <!--        &lt;!&ndash; 代理 &ndash;&gt;-->
    <!--        <setting name="proxyFactory" value="CGLIB"/>-->
    <!--        <setting name="lazyLoadingEnabled" value="true"/>-->
    <!--    </settings>-->

    <!--    &lt;!&ndash; 分页插件 &ndash;&gt;-->
    <!--    <plugins>-->
    <!--        <plugin interceptor="com.github.pagehelper.PageInterceptor">-->
    <!--            &lt;!&ndash; 该参数默认为false-->
    <!--            设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用-->
    <!--            和startPage中的pageNum效果一样 &ndash;&gt;-->
    <!--            <property name="offsetAsPageNum" value="true"/>-->
    <!--            &lt;!&ndash; 该参数默认为false-->
    <!--            设置为true是，使用RowBounds分页会进行count查询 &ndash;&gt;-->
    <!--            <property name="rowBoundsWithCount" value="true"/>-->
    <!--            &lt;!&ndash; 设置为true时，如果pageSize=0或者ROwRounds.limit=0就会查询出全部的结果-->
    <!--            （相当于每一偶执行分页查询，但是返回结果仍然是page类型） &ndash;&gt;-->
    <!--            <property name="pageSizeZero" value="true"/>-->
    <!--        </plugin>-->
    <!--    </plugins>-->

    <!--    引入properties-->
    <properties resource="db.properties"/>

    <!-- 设置单个/多个别名-->
    <typeAliases>
        <!-- 设置单个别名-->
        <!-- <typeAlias type="edu.ustc.SpringStart.person.POJO.Person" alias="person"></typeAlias>-->
        <!-- 批量定义别名-->
        <package name="edu.ustc.SpringStart.person.POJO"/>
    </typeAliases>

    <typeHandlers>
        <typeHandler handler="edu.ustc.SpringStart.person.converter.BoolenAndIntConverler" javaType="Boolean" jdbcType="INTEGER"/>
    </typeHandlers>

    <environments default="development">
        <!-- 可以通过修改build参数指定数据库 -->
        <environment id="development">
            <!--
            事务提交方式
            JDBC：利用JDBC方式处理事务（commit rollback close）
            MANAGED：将事务交由其他组件去托管（spring jobss），默认会关闭连接
            -->
            <transactionManager type="JDBC"/>
            <!--
            数据源类型
            UNPOOLED：传统JDBC模式，需要打开关闭数据库
            POOLED：使用数据库连接池
            JNDI：
            -->
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <!--        加载映射文件-->
        <mapper resource="mapper/personMapper.xml"/>
    </mappers>
</configuration>